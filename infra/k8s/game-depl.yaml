apiVersion: apps/v1
kind: Deployment
metadata:
  name: game-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: game
  template:
    metadata:
      labels:
        app: game
    spec:
      # initContainers:
        # - name: wait-for-rabbitmq
        #   image: busybox
        #   command: ['sh', '-c', 'until nc -z rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;']
        # - name: wait-for-postgres
        #   image: busybox
        #   command: ['sh', '-c', 'until nc -z postgres-game-srv 5432; do echo waiting for postgres; sleep 2; done;']
        # - name: wait-for-redis
        #   image: busybox
        #   command: ['sh', '-c', 'until nc -zv redis 6379; do echo "Waiting for Redis..."; sleep 5; done']
      containers:
        - name: game
          image: vmquynh/game
          volumeMounts:
            - mountPath: "/app/data"
              name: game-storage
          env:
            - name: JWT_KEY
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: JWT_KEY
            - name: DB_HOST
              value: "postgres-game-srv"
            - name: DB_PORT
              value: "5432"
            - name: DB_DATABASE
              value: "game-db"
            - name: DB_ADMIN
              value: "game-admin"
            - name: DB_PASSWORD
              value: "game-admin"
      volumes:
        - name: game-storage
          persistentVolumeClaim:
            claimName: blob-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: game-srv
spec:
  selector:
    app: game
  ports:
    - name: game
      protocol: TCP
      port: 3000
      targetPort: 3000